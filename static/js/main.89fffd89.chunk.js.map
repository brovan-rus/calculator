{"version":3,"sources":["components/Calculator/Calculator.module.css","components/Calculator-digits/CalculatorDigits.module.css","components/Button/Button.module.css","components/Calculator-display/CalculatorDisplay.module.css","reportWebVitals.ts","components/utils/constants.ts","components/Button/Button.tsx","components/Calculator-digits/CalculatorDigits.tsx","components/Calculator-display/CalculatorDisplay.tsx","components/Calculator/Calculator.tsx","components/utils/calculation.tsx","components/App/App.tsx","index.tsx","components/App/App.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","digits","maxDigits","window","matchMedia","matches","operators","console","log","cx","cn","bind","styles","Button","symbol","isWhite","restButtonProps","className","CalculatorDigits","onEnter","onReset","onResult","container","map","digit","onClick","disabled","handleButtonClick","CalculatorDisplay","primaryLine","isError","secondaryLine","Calculator","React","useState","setIsError","expression","setExpression","result","setResult","handleEnter","length","includes","handleReset","handleResult","calculationExpression","slice","numbersArray","replaceAll","split","el","parseFloat","filter","isNaN","operatorsArray","secondaryOperators","firstIterationArray","counter","forEach","operator","i","push","Number","isInteger","toFixed","calculation","useEffect","handleKeyDown","e","key","document","addEventListener","removeEventListener","App","basename","process","page","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.89fffd89.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Calculator_container__2lxmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CalculatorDigits_container__1bPYV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Button_container__1mu3S\",\"white\":\"Button_white__1kiCn\",\"font\":\"Button_font__2k2M4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CalculatorDisplay_container__3rA5b\",\"font\":\"CalculatorDisplay_font__1Phvv\",\"primaryLine\":\"CalculatorDisplay_primaryLine__1EfLe\",\"isError\":\"CalculatorDisplay_isError__3XhnR\",\"secondaryLine\":\"CalculatorDisplay_secondaryLine__1n2C9\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const digits = ['C', ' ', '%', '/', '7', '8', '9', 'x', '4', '5', '6', '-', '1', '2', '3', '+', '00', '0', ',', '='];\n\nconst mediaQuery = window.matchMedia('(max-width: 450px)');\nexport const maxDigits = mediaQuery.matches ? 8 : 12;\nexport const operators = [ '√', '%', '/', '-', '+', 'x'];\n\nconsole.log(maxDigits);","import { ButtonHTMLAttributes, FC } from 'react';\nimport cn from 'classnames/bind';\n\nimport styles from './Button.module.css';\n\nconst cx = cn.bind(styles);\n\ninterface IButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  symbol: string;\n  isWhite?: boolean;\n}\n\nexport const Button: FC<IButtonProps> = ({ symbol, isWhite = false, ...restButtonProps }) => {\n  return (\n    <button className={cx('container', 'font', isWhite && 'white')} {...restButtonProps}>\n      {symbol}\n    </button>\n  );\n};\n","import React, { FC } from 'react';\n\nimport styles from './CalculatorDigits.module.css';\n\nimport { Button } from '../Button';\nimport { digits } from '../utils/constants';\n\ninterface ICalculatorDigitsProps {\n  onEnter: (digit: string) => void,\n  onReset: () => void,\n  onResult: () => void,\n}\n\nexport const CalculatorDigits: FC<ICalculatorDigitsProps> = ({onEnter, onReset, onResult}) => {\n\n  const handleButtonClick = (digit: string) => {\n    onEnter(digit);\n  };\n\n  return (\n    <div className={styles.container}>\n      {digits.map((digit) => {\n        if (digit === '=') {\n          return <Button symbol={digit} isWhite key={digit} onClick={onResult} />;\n        } else if (digit === 'C') {\n          return <Button symbol={digit} key={digit} onClick={onReset} />;\n        }\n        else if (digit === ' ') {\n          return <Button symbol={digit} key={digit} onClick={onReset} disabled={true}/>;\n        }\n        else {\n          return <Button symbol={digit} key={digit} onClick={() => handleButtonClick(digit)} />;\n        }\n      })}\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport cn from 'classnames/bind';\n\nimport styles from './CalculatorDisplay.module.css';\n\nconst cx = cn.bind(styles);\n\ninterface ICalculatorDisplayProps {\n  primaryLine?: string,\n  secondaryLine?: string\n  isError?: boolean\n}\n\nexport const CalculatorDisplay: FC<ICalculatorDisplayProps> = ({primaryLine, isError= false, secondaryLine}) => {\n  return (\n    <div className={cx('container', 'font', {isError})}>\n      <p className={cx('secondaryLine')}>{secondaryLine}</p>\n      <p className={cx('primaryLine', {isError})}>{primaryLine}</p>\n    </div>\n  )\n}\n","import React, { FC } from 'react';\n\nimport styles from './Calculator.module.css';\nimport { digits, maxDigits, operators } from '../utils/constants';\nimport { CalculatorDigits } from '../Calculator-digits';\nimport { CalculatorDisplay } from '../Calculator-display';\nimport { calculation } from '../utils/calculation';\n\nexport const Calculator: FC = () => {\n  const [isError, setIsError] = React.useState(false);\n  const [expression, setExpression] = React.useState('');\n  const [result, setResult] = React.useState('');\n\n  const handleEnter = (digit: string) => {\n    // Ограничение максимальной дины выражения\n    if (!isError && maxDigits > expression.length) {\n      // Ограничение возможности двойного оператора и ввода, когда есть результат на экране\n      if (\n        !(\n          operators.includes(digit) &&\n          operators.includes(expression[expression.length - 1]) &&\n          digit === '%'\n        ) &&\n        !(operators.includes(digit) && expression.length === 0) &&\n        result === ''\n      ) {\n        setExpression(expression + digit);\n      }\n    } else setIsError(true);\n  };\n\n  const handleReset = () => {\n    setExpression('');\n    setResult('');\n    setIsError(false);\n  };\n  const handleResult = () => {\n    let calculationExpression = expression;\n    if (\n      operators.includes(expression[expression.length - 1]) &&\n      expression[expression.length - 1] !== '%'\n    ) {\n      calculationExpression = expression.slice(0, expression.length - 1);\n      setExpression(calculationExpression);\n    }\n    const result = calculation(calculationExpression);\n    if (result === 'Infinity' || result.length > maxDigits) {\n      setIsError(true);\n      return;\n    } else {\n      setResult(result);\n    }\n  };\n\n  React.useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const key = e.key;\n      if (digits.includes(key) && !(key === '=' || key === 'C')) {\n        handleEnter(key);\n      }\n      if (key === 'Escape') {\n        handleReset();\n      }\n      if (key === 'Enter') {\n        handleResult();\n      }\n      if (key === '*') {handleEnter('x')};\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleEnter]);\n\n  return (\n    <div className={styles.container}>\n      <CalculatorDisplay\n        primaryLine={result.length > 0 ? result : expression}\n        secondaryLine={result.length > 0 && !isError ? expression : ''}\n        isError={isError}\n      />\n      <CalculatorDigits onEnter={handleEnter} onReset={handleReset} onResult={handleResult} />\n    </div>\n  );\n};\n","export const calculation = (expression: string) => {\n  const numbersArray = expression\n    .replaceAll(',', '.')\n    .split(/[-/+%x]/)\n    .map((el) => parseFloat(el))\n    .filter((el) => !isNaN(el));\n  const operatorsArray = expression.split(/[,0-9]/).filter((el) => el !== '');\n  const secondaryOperators = ['+', '-'];\n\n  const firstIterationArray: [number] = [numbersArray[0]];\n  let counter = 0;\n  operatorsArray.forEach((operator, i) => {\n    if (!secondaryOperators.includes(operator)) {\n      if (operator === 'x') {\n        firstIterationArray[counter] *= numbersArray[i + 1];\n      }\n      if (operator === '/') {\n        firstIterationArray[counter] /= numbersArray[i + 1];\n      }\n      if (operator === '%') {\n        firstIterationArray[counter] /= 100;\n      }\n      if (operator === '%+' || operator === '%-') {\n        firstIterationArray[counter] /= 100;\n        firstIterationArray.push(numbersArray[i + 1]);\n        counter++;\n      }\n    } else {\n      firstIterationArray.push(numbersArray[i + 1]);\n      counter++;\n    }\n  });\n\n  counter = 1;\n  let result = firstIterationArray[0];\n  operatorsArray.forEach((operator) => {\n    if (secondaryOperators.includes(operator) || operator === '%+' || operator === '%-') {\n      if (operator === '+' || operator === '%+') {\n        result += firstIterationArray[counter];\n        counter++;\n      }\n      if (operator === '-' || operator === '%-') {\n        result -= firstIterationArray[counter];\n        counter++;\n      }\n    }\n  });\n  if (Number.isInteger(result)) {return result.toFixed(0)} else {return result.toFixed(6)}\n};\n","import { FC } from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\n\nimport {Calculator} from \"../Calculator\";\nimport styles from './App.module.css';\n\nexport const App: FC = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <div className={styles.page}>\n      <div className={styles.container}>\n        <Calculator />\n      </div>\n    </div>\n    </BrowserRouter>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport './shared/styles/pallete.css';\nimport './vendor/normalize.css'\nimport {App} from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__1jb25\",\"container\":\"App_container__sv-M9\"};"],"sourceRoot":""}